name: "PreCheck Flask App CI"

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.12.6
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.6

      - name: Install MariaDB Connector/C
        run: |
          sudo apt-get update
          sudo apt-get install -y mariadb-server mariadb-client libmariadb-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Install dependencies in venv
        run: |
          sudo pip install -r requirement.txt
        shell: bash

      - name: Start MySQL
        run: |
          sudo apt install mariadb-server

      - name: Login my sql
        run: |
          sudo mariadb -e "CREATE USER 'admin'@'127.0.0.1' IDENTIFIED BY 'admin'"
          sudo mariadb -e "GRANT ALL PRIVILEGES ON *.* TO 'admin'@127.0.0.1"

      - name: Create env user
        run: |
          touch .env
          echo "DB_USERNAME=admin">>.env
          echo "DB_PASSWORD=admin">>.env
          echo "DB_NAME=test">>.env
          echo "DB_HOST=localhost">>.env
          echo "DB_PORT=3306">>.env

      - name: Run python
        run: |
          python run.py

      - name: Run HealthCheck Tests
        run: |
          python3 -m unittest discover -s app/tests -p 'test_healthcheck.py' &> user_output.log
          cat user_output.log
          # if grep -i 'AssertionError' user_output.log; then
          #   echo 'Test failed due to an AssertionError!'
          #   exit 1
          # fi
        shell: bash

      - name: Run User API Tests
        run: |
          python -m unittest discover -s app/tests -p 'test_user.py' &> user_output.log
          cat user_output.log
          if grep -i 'AssertionError' user_output.log; then
            echo 'Test failed due to an AssertionError!'
            exit 1
          fi
        shell: bash
