name: App CI Pipeline

on:
  push:
    branches:
      - main
  #     - develop
  # pull_request:
  #   branches:
  #     - main
  #     - develop

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        options: >-
          --health-cmd "mysqladmin ping -h 127.0.0.1 -u test_user -ptest_pass" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirement.txt

      # Step 4: Wait for MySQL to be available
      - name: Wait for MySQL Service
        run: |
          while ! mysqladmin ping -h127.0.0.1 -utest_user -ptest_pass --silent; do
            echo "Waiting for MySQL..."
            sleep 5
          done

      # Step 5: Set up MySQL Database (If required by your application)
      - name: Set Up Database Schema
        run: |
          source venv/bin/activate
          python manage.py db upgrade  # Or any command to set up schema

      # Step 6: Run Health Check Unit Test
      - name: Run Health Check Tests
        run: |
          source venv/bin/activate
          python -m unittest discover -s tests -p "test_health_check.py"

      # Step 7: Run User API Unit Test
      - name: Run User API Tests
        env:
          DATABASE_URL: "mysql+pymysql://test_user:test_pass@127.0.0.1:3306/test_db"
        run: |
          source venv/bin/activate
          python -m unittest discover -s tests -p "test_user.py"
