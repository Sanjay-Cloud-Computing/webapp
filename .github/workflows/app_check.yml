# .github/workflows/ci.yml

name: Flask App CI

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Python 3.9
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Install dependencies from requirements.txt if it exists
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirement.txt; fi

      # Create a .env file with required environment variables
      - name: Create .env file
        run: |
          echo "FLASK_ENV=testing" >> .env
          echo "DATABASE_URL=sqlite:///:memory:" >> .env
          echo "SQLALCHEMY_DATABASE_URI=sqlite:///:memory:" >> .env
          echo ".env file created with test configurations."

      # Display the .env file (for debugging purposes)
      - name: Display .env file
        run: cat .env

      # Set up the virtual environment
      - name: Set up Virtual Environment and Navigate
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirement.txt

      # Run HealthCheck tests
      - name: Check Health API Test Output for Errors
        run: |
          source venv/bin/activate
          python -m unittest discover -s app/tests -p 'test_healthcheck.py' 2> tee user_output.log 
          if grep -i 'AssertionError' user_output.log; then
            echo 'Test failed due to an error or failure!'
            exit 1
          fi

      # Run User API tests with .env variables
      - name: Run User API Test Output with .env Configuration
        env:
          FLASK_ENV: testing
          SQLALCHEMY_DATABASE_URI: "sqlite:///:memory:"
        run: |
          source venv/bin/activate
          python -m unittest discover -s app/tests -p 'test_user.py' 2> tee user_output.log 
          if grep -i 'AssertionError' user_output.log; then
            echo 'Test failed due to an error or failure!'
            exit 1
          fi
